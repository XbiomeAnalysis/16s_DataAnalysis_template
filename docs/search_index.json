[["index.html", "16s microbiota data analysis based on XMAS package Chapter 1 Prerequisites 1.1 Preparing for the tutorial 1.2 Workflow description 1.3 Systematic Information", " 16s microbiota data analysis based on XMAS package Hua Zou 2022-05-20 Chapter 1 Prerequisites Here, we give users one example to practice the 16s microbiota data analysis workflow by XMAS 2.0. By the way, we also recommend users handling your own microbiota data in a reasonable manner when you utilize this package or workflow. Pay attention to whether your data fit the methods this package provided. 1.1 Preparing for the tutorial This tutorial requires that the users should have basic knowledge on R language and statistics. If you are new to microbial research, we recommend the Statistical Analysis of Microbiome Data with R (Xia et al. 2018) as guide book. We suggest users using local laptop because our own server have not deployed XMAS 2.0 package yet. In addition, installing the following software before using XMAS 2.0. R 3.6.3 or later release Download link. Rstudio Desktop Download link. 1.2 Workflow description The standard data analysis of 16S and MGS data by XMAS 2.0. The upstream process is performed by in-house pipeline. and this example just shows how to perform downstream data analysis. In briefly, the example comprises the following steps: Converting inputs into phyloseq object; Quality Evaluation; Pre-Processing Data; Diversity analysis; Ordination analysis; Composition analysis; Differential analysis. Figure 1.1: Functions of XMAS 2.0 in 16s 1.3 Systematic Information sessionInfo() ## R version 4.1.2 (2021-11-01) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Monterey 12.2.1 ## ## Matrix products: default ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] ggpubr_0.4.0 ggplot2_3.3.5 phyloseq_1.38.0 tibble_3.1.6 dplyr_1.0.8 XMAS_2.1.0 ## ## loaded via a namespace (and not attached): ## [1] utf8_1.2.2 tidyselect_1.1.2 RSQLite_2.2.10 AnnotationDbi_1.56.2 ## [5] htmlwidgets_1.5.4 grid_4.1.2 BiocParallel_1.28.3 munsell_0.5.0 ## [9] codetools_0.2-18 DT_0.21 withr_2.5.0 colorspace_2.0-3 ## [13] Biobase_2.54.0 highr_0.9 knitr_1.37 rstudioapi_0.13 ## [17] stats4_4.1.2 robustbase_0.93-9 bayesm_3.1-4 ggsignif_0.6.3 ## [21] MatrixGenerics_1.6.0 labeling_0.4.2 optparse_1.7.1 GenomeInfoDbData_1.2.7 ## [25] lpsymphony_1.22.0 bit64_4.0.5 farver_2.1.0 pheatmap_1.0.12 ## [29] rhdf5_2.38.1 vctrs_0.3.8 generics_0.1.2 TH.data_1.1-0 ## [33] xfun_0.30 Maaslin2_1.8.0 R6_2.5.1 GenomeInfoDb_1.30.1 ## [37] locfit_1.5-9.5 bitops_1.0-7 rhdf5filters_1.6.0 cachem_1.0.6 ## [41] DelayedArray_0.20.0 assertthat_0.2.1 scales_1.1.1 multcomp_1.4-18 ## [45] nnet_7.3-17 gtable_0.3.0 sandwich_3.0-1 rlang_1.0.2 ## [49] genefilter_1.76.0 splines_4.1.2 protoclust_1.6.3 rstatix_0.7.0 ## [53] broom_0.7.12 checkmate_2.0.0 yaml_2.3.5 reshape2_1.4.4 ## [57] abind_1.4-5 crosstalk_1.2.0 backports_1.4.1 qvalue_2.26.0 ## [61] Hmisc_4.6-0 DiagrammeR_1.0.9 tensorA_0.36.2 tools_4.1.2 ## [65] bookdown_0.24 ellipsis_0.3.2 gplots_3.1.1 jquerylib_0.1.4 ## [69] biomformat_1.22.0 RColorBrewer_1.1-2 BiocGenerics_0.40.0 Rcpp_1.0.8.2 ## [73] plyr_1.8.6 base64enc_0.1-3 visNetwork_2.1.0 zlibbioc_1.40.0 ## [77] purrr_0.3.4 RCurl_1.98-1.6 rpart_4.1.16 Wrench_1.12.0 ## [81] cowplot_1.1.1 S4Vectors_0.32.3 zoo_1.8-9 SummarizedExperiment_1.24.0 ## [85] ggrepel_0.9.1 cluster_2.1.2 magrittr_2.0.2 data.table_1.14.2 ## [89] mvtnorm_1.1-3 matrixStats_0.61.0 corncob_0.2.0 RAIDA_1.0 ## [93] evaluate_0.15 xtable_1.8-4 XML_3.99-0.9 jpeg_0.1-9 ## [97] IRanges_2.28.0 gridExtra_2.3 shape_1.4.6 compiler_4.1.2 ## [101] KernSmooth_2.23-20 crayon_1.5.0 htmltools_0.5.2 mgcv_1.8-39 ## [105] pcaPP_1.9-74 Formula_1.2-4 tidyr_1.2.0 geneplotter_1.72.0 ## [109] libcoin_1.0-9 DBI_1.1.2 biglm_0.9-2.1 MASS_7.3-55 ## [113] compositions_2.0-4 Matrix_1.4-0 ade4_1.7-18 getopt_1.20.3 ## [117] car_3.0-12 permute_0.9-7 cli_3.2.0 parallel_4.1.2 ## [121] igraph_1.2.11 GenomicRanges_1.46.1 pkgconfig_2.0.3 coin_1.4-2 ## [125] foreign_0.8-82 foreach_1.5.2 annotate_1.72.0 bslib_0.3.1 ## [129] multtest_2.50.0 XVector_0.34.0 stringr_1.4.0 digest_0.6.29 ## [133] vegan_2.5-7 Biostrings_2.62.0 rmarkdown_2.13 htmlTable_2.4.0 ## [137] edgeR_3.36.0 gtools_3.9.2 modeltools_0.2-23 lifecycle_1.0.1 ## [141] nlme_3.1-155 jsonlite_1.8.0 Rhdf5lib_1.16.0 carData_3.0-5 ## [145] limma_3.50.1 fansi_1.0.2 pillar_1.7.0 lattice_0.20-45 ## [149] KEGGREST_1.34.0 fastmap_1.1.0 httr_1.4.2 DEoptimR_1.0-10 ## [153] survival_3.3-1 glue_1.6.2 png_0.1-7 iterators_1.0.14 ## [157] glmnet_4.1-3 bit_4.0.4 stringi_1.7.6 sass_0.4.0 ## [161] metagenomeSeq_1.36.0 blob_1.2.2 DESeq2_1.34.0 latticeExtra_0.6-29 ## [165] caTools_1.18.2 memoise_2.0.1 ape_5.6-2 References "],["convert-inputdata-into-phyloseq-object.html", "Chapter 2 Convert inputdata into phyloseq object 2.1 DADA2 2.2 Summarize phyloseq-class object 2.3 Systematic Information", " Chapter 2 Convert inputdata into phyloseq object r Biocpkg(“phyloseq”) (McMurdie and Holmes 2013) is the most popular Biocondcutor package used by the microbiome research field, and phyloseq-class objects are a great data-standard for microbiota data in R. Therefore, the core functions in XMAS take phyloseq-class object as input. In the phyloseq object, information on OTU abundances, taxonomy of OTUs, the phylogenetic tree and metadata is stored. This tutorial will introduce you the basic steps to convert results from the in-house pipeline into phyloseq-class object. More importantly on how to look at your data and filter appropriately. We will use the inputs from /home/xuxiaomin/project/standardized_analytics_workflow_R_function/demo_data/. Loading packages library(XMAS) library(dplyr) library(tibble) library(phyloseq) library(ggplot2) library(ggpubr) 2.1 DADA2 dada2 results from standardized_analytics_workflow_R_function: /home/xuxiaomin/project/standardized_analytics_workflow_R_function/demo_data/16S/process/xdada2/dada2_res.rds /home/xuxiaomin/project/standardized_analytics_workflow_R_function/demo_data/16S/process/fasta2tree/tree.nwk /home/xuxiaomin/project/standardized_analytics_workflow_R_function/demo_data/16S/metadata.txt dada2_res &lt;- readRDS( system.file( &quot;extdata&quot;, &quot;dada2_res.rds&quot;, package = &quot;XMAS&quot; ) ) sam_tab &lt;- read.table( system.file( &quot;extdata&quot;, &quot;dada2_metadata.tsv&quot;, package = &quot;XMAS&quot; ), sep = &quot;\\t&quot;, header = TRUE, stringsAsFactors = FALSE ) tree &lt;- read_tree( system.file( &quot;extdata&quot;, &quot;tree.nwk&quot;, package = &quot;XMAS&quot; ) ) tax_tab &lt;- import_dada2_taxa(dada2_res$tax_tab) otu_tab &lt;- dada2_res$seq_tab sam_tab &lt;- sam_tab %&gt;% tibble::column_to_rownames(&quot;seqID&quot;) # Shouldn&#39;t use the Total Number as SampleID (wrong: 123456; right: X123456) rownames(otu_tab) &lt;- paste0(&quot;S&quot;, rownames(otu_tab)) rownames(sam_tab) &lt;- paste0(&quot;S&quot;, rownames(sam_tab)) dada2_ps &lt;- import_dada2(seq_tab = otu_tab, tax_tab = tax_tab, sam_tab = sam_tab, phy_tree = tree) dada2_ps ## phyloseq-class experiment-level object ## otu_table() OTU Table: [ 896 taxa and 24 samples ] ## sample_data() Sample Data: [ 24 samples by 1 sample variables ] ## tax_table() Taxonomy Table: [ 896 taxa by 7 taxonomic ranks ] ## phy_tree() Phylogenetic Tree: [ 896 tips and 893 internal nodes ] ## refseq() DNAStringSet: [ 896 reference sequences ] we obtain the phyloseq-class object and then use it to perform data analysis. Here, the phyloseq object comprises five components (OTU Table, Sample Data, Taxonomy Table, Phylogenetic Tree and DNAStringSet). 2.2 Summarize phyloseq-class object summarize_phyloseq(dada2_ps) ## Compositional = NO2 ## 1] Min. number of reads = 511812] Max. number of reads = 936223] Total number of reads = 15025374] Average number of reads = 62605.70833333335] Median number of reads = 619157] Sparsity = 0.8653738839285716] Any OTU sum to 1 or less? NO8] Number of singletons = 09] Percent of OTUs that are singletons ## (i.e. exactly one read detected across all samples)010] Number of sample variables are: 1Group2 ## [[1]] ## [1] &quot;1] Min. number of reads = 51181&quot; ## ## [[2]] ## [1] &quot;2] Max. number of reads = 93622&quot; ## ## [[3]] ## [1] &quot;3] Total number of reads = 1502537&quot; ## ## [[4]] ## [1] &quot;4] Average number of reads = 62605.7083333333&quot; ## ## [[5]] ## [1] &quot;5] Median number of reads = 61915&quot; ## ## [[6]] ## [1] &quot;7] Sparsity = 0.865373883928571&quot; ## ## [[7]] ## [1] &quot;6] Any OTU sum to 1 or less? NO&quot; ## ## [[8]] ## [1] &quot;8] Number of singletons = 0&quot; ## ## [[9]] ## [1] &quot;9] Percent of OTUs that are singletons\\n (i.e. exactly one read detected across all samples)0&quot; ## ## [[10]] ## [1] &quot;10] Number of sample variables are: 1&quot; ## ## [[11]] ## [1] &quot;Group&quot; The minus account of the OTU counts is 51181 in the phyloseq object, and we can use it as the threshold to rarefy. Notice the Sparsity (0.865), indicating the data has many zeros and pay attention to the downstream data analysis. A common property of amplicon based microbiota data generated by sequencing. 2.3 Systematic Information sessionInfo() ## R version 4.1.2 (2021-11-01) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Monterey 12.2.1 ## ## Matrix products: default ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] ggpubr_0.4.0 ggplot2_3.3.5 phyloseq_1.38.0 tibble_3.1.6 dplyr_1.0.8 XMAS_2.1.0 ## ## loaded via a namespace (and not attached): ## [1] utf8_1.2.2 tidyselect_1.1.2 RSQLite_2.2.10 AnnotationDbi_1.56.2 ## [5] htmlwidgets_1.5.4 grid_4.1.2 BiocParallel_1.28.3 munsell_0.5.0 ## [9] codetools_0.2-18 DT_0.21 withr_2.5.0 colorspace_2.0-3 ## [13] Biobase_2.54.0 highr_0.9 knitr_1.37 rstudioapi_0.13 ## [17] stats4_4.1.2 robustbase_0.93-9 bayesm_3.1-4 ggsignif_0.6.3 ## [21] MatrixGenerics_1.6.0 labeling_0.4.2 optparse_1.7.1 GenomeInfoDbData_1.2.7 ## [25] lpsymphony_1.22.0 bit64_4.0.5 farver_2.1.0 pheatmap_1.0.12 ## [29] rhdf5_2.38.1 vctrs_0.3.8 generics_0.1.2 TH.data_1.1-0 ## [33] xfun_0.30 Maaslin2_1.8.0 R6_2.5.1 GenomeInfoDb_1.30.1 ## [37] locfit_1.5-9.5 bitops_1.0-7 rhdf5filters_1.6.0 cachem_1.0.6 ## [41] DelayedArray_0.20.0 assertthat_0.2.1 scales_1.1.1 multcomp_1.4-18 ## [45] nnet_7.3-17 gtable_0.3.0 sandwich_3.0-1 rlang_1.0.2 ## [49] genefilter_1.76.0 splines_4.1.2 protoclust_1.6.3 rstatix_0.7.0 ## [53] broom_0.7.12 checkmate_2.0.0 yaml_2.3.5 reshape2_1.4.4 ## [57] abind_1.4-5 crosstalk_1.2.0 backports_1.4.1 qvalue_2.26.0 ## [61] Hmisc_4.6-0 DiagrammeR_1.0.9 tensorA_0.36.2 tools_4.1.2 ## [65] bookdown_0.24 ellipsis_0.3.2 gplots_3.1.1 jquerylib_0.1.4 ## [69] biomformat_1.22.0 RColorBrewer_1.1-2 BiocGenerics_0.40.0 Rcpp_1.0.8.2 ## [73] plyr_1.8.6 base64enc_0.1-3 visNetwork_2.1.0 zlibbioc_1.40.0 ## [77] purrr_0.3.4 RCurl_1.98-1.6 rpart_4.1.16 Wrench_1.12.0 ## [81] cowplot_1.1.1 S4Vectors_0.32.3 zoo_1.8-9 SummarizedExperiment_1.24.0 ## [85] ggrepel_0.9.1 cluster_2.1.2 magrittr_2.0.2 data.table_1.14.2 ## [89] mvtnorm_1.1-3 matrixStats_0.61.0 corncob_0.2.0 RAIDA_1.0 ## [93] evaluate_0.15 xtable_1.8-4 XML_3.99-0.9 jpeg_0.1-9 ## [97] IRanges_2.28.0 gridExtra_2.3 shape_1.4.6 compiler_4.1.2 ## [101] KernSmooth_2.23-20 crayon_1.5.0 htmltools_0.5.2 mgcv_1.8-39 ## [105] pcaPP_1.9-74 Formula_1.2-4 tidyr_1.2.0 geneplotter_1.72.0 ## [109] libcoin_1.0-9 DBI_1.1.2 biglm_0.9-2.1 MASS_7.3-55 ## [113] compositions_2.0-4 Matrix_1.4-0 ade4_1.7-18 getopt_1.20.3 ## [117] car_3.0-12 permute_0.9-7 cli_3.2.0 parallel_4.1.2 ## [121] igraph_1.2.11 GenomicRanges_1.46.1 pkgconfig_2.0.3 coin_1.4-2 ## [125] foreign_0.8-82 foreach_1.5.2 annotate_1.72.0 bslib_0.3.1 ## [129] multtest_2.50.0 XVector_0.34.0 stringr_1.4.0 digest_0.6.29 ## [133] vegan_2.5-7 Biostrings_2.62.0 rmarkdown_2.13 htmlTable_2.4.0 ## [137] edgeR_3.36.0 gtools_3.9.2 modeltools_0.2-23 lifecycle_1.0.1 ## [141] nlme_3.1-155 jsonlite_1.8.0 Rhdf5lib_1.16.0 carData_3.0-5 ## [145] limma_3.50.1 fansi_1.0.2 pillar_1.7.0 lattice_0.20-45 ## [149] KEGGREST_1.34.0 fastmap_1.1.0 httr_1.4.2 DEoptimR_1.0-10 ## [153] survival_3.3-1 glue_1.6.2 png_0.1-7 iterators_1.0.14 ## [157] glmnet_4.1-3 bit_4.0.4 stringi_1.7.6 sass_0.4.0 ## [161] metagenomeSeq_1.36.0 blob_1.2.2 DESeq2_1.34.0 latticeExtra_0.6-29 ## [165] caTools_1.18.2 memoise_2.0.1 ape_5.6-2 References "],["quality-control.html", "Chapter 3 Quality Control 3.1 Reads’ track by DADA2 3.2 Spike-in sample (BRS) assessment 3.3 Spike-in sample’s remove 3.4 Rarefaction curves 3.5 Systematic Information", " Chapter 3 Quality Control Loading packages library(XMAS) library(dplyr) library(tibble) library(phyloseq) library(ggplot2) library(ggpubr) Quality control of DADA2 results will help us have more rational determinations on the further data analysis. 3.1 Reads’ track by DADA2 plot_Dada2Track( data=dada2_res$reads_track, mode=&quot;PE&quot;, relative_abundance=TRUE, legend_position=&quot;top&quot;) Figure 3.1: Reads’ track by DADA2 (16s example) The percentage of the final remained read counts approximate 70%, indicating that we should consider the sequence depth for analysis when we build the sequence library. 3.2 Spike-in sample (BRS) assessment # extracting the genus level phyloseq dada2_ps_genus &lt;- summarize_taxa(ps = dada2_ps, taxa_level = &quot;Genus&quot;) sample_data(dada2_ps_genus) ## Group ## S6030 BB ## S6032 BB ## S6033 BB ## S6035 AA ## S6036 BB ## S6037 AA ## S6040 BB ## S6043 AA ## S6045 BB ## S6046 BB ## S6048 BB ## S6049 AA ## S6050 BB ## S6054 BB ## S6055 BB ## S6058 BB ## S6059 AA ## S6060 AA ## S6061 AA ## S6063 BB ## S6065 AA ## S6066 AA ## S6068 BB ## S8005 QC RefCheck_16s &lt;- run_RefCheck( ps=dada2_ps_genus, BRS_ID=&quot;S8005&quot;, Reference=NULL, Ref_type=&quot;16s&quot;, Save=NULL) ## Noting: the Reference Matrix is for 16s ## S8005 is in the Reference Matrix&#39;s samples and remove it to run ## ## #########Matched baterica of the Spike-in sample########### ## Checking out all the taxa of the Reference Matrix are in the sequencing dataset ## g__Bifidobacterium ## g__Bacteroides ## g__Faecalibacterium ## g__Lactobacillus ## g__Parabacteroides ## g__Collinsella ## g__Coprococcus_3 ## g__Dorea ## g__Streptococcus ## g__Roseburia ## g__Anaerostipes ## g__Escherichia/Shigella ## g__Enterococcus ## g__Prevotella_9 ## g__Eggerthella ## ## The number of the additional Taxa in the sequencing dataset is 1 ## ########################################################### ## ## ##############Value of the Reference sample############### ## Correlation Coefficient of the Reference sample is: 0.9714 ## Bray Curtis of the Reference sample is: 0.07607 ## Impurity of the Reference sample is: 0.06409 ## ########################################################### ## #####Final Evaluation Results of the Spike-in sample####### ## The spike-in sample of sequencing dataset passed the cutoff of the Reference Matrix ## Cutoff of Coefficient is 0.8946 ## Cutoff of BrayCurtis is 0.3878 ## Cutoff of Impurity is 0.1565 ## ########################################################### 3.3 Spike-in sample’s remove dada2_ps_NoQC &lt;- get_GroupPhyloseq( ps = dada2_ps, group = &quot;Group&quot;, group_names = &quot;QC&quot;, discard = TRUE ) dada2_ps_NoQC ## phyloseq-class experiment-level object ## otu_table() OTU Table: [ 896 taxa and 23 samples ] ## sample_data() Sample Data: [ 23 samples by 1 sample variables ] ## tax_table() Taxonomy Table: [ 896 taxa by 7 taxonomic ranks ] ## phy_tree() Phylogenetic Tree: [ 896 tips and 893 internal nodes ] ## refseq() DNAStringSet: [ 896 reference sequences ] 3.4 Rarefaction curves plot_RarefCure(ps = dada2_ps_NoQC, taxa_level = &quot;OTU&quot;, step = 100, label = &quot;Group&quot;, color = &quot;Group&quot;, parallel = TRUE, se = TRUE) Figure 3.2: Rarefaction curves (16s example) The result showed that all the samples had different sequence depth but had the full sample richness. 3.5 Systematic Information sessionInfo() ## R version 4.1.2 (2021-11-01) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Monterey 12.2.1 ## ## Matrix products: default ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] ggpubr_0.4.0 ggplot2_3.3.5 phyloseq_1.38.0 tibble_3.1.6 dplyr_1.0.8 XMAS_2.1.0 ## ## loaded via a namespace (and not attached): ## [1] utf8_1.2.2 tidyselect_1.1.2 RSQLite_2.2.10 AnnotationDbi_1.56.2 ## [5] htmlwidgets_1.5.4 grid_4.1.2 BiocParallel_1.28.3 munsell_0.5.0 ## [9] codetools_0.2-18 DT_0.21 withr_2.5.0 colorspace_2.0-3 ## [13] Biobase_2.54.0 highr_0.9 knitr_1.37 rstudioapi_0.13 ## [17] stats4_4.1.2 robustbase_0.93-9 bayesm_3.1-4 ggsignif_0.6.3 ## [21] MatrixGenerics_1.6.0 labeling_0.4.2 optparse_1.7.1 GenomeInfoDbData_1.2.7 ## [25] lpsymphony_1.22.0 bit64_4.0.5 farver_2.1.0 pheatmap_1.0.12 ## [29] rhdf5_2.38.1 vctrs_0.3.8 generics_0.1.2 TH.data_1.1-0 ## [33] xfun_0.30 Maaslin2_1.8.0 R6_2.5.1 GenomeInfoDb_1.30.1 ## [37] locfit_1.5-9.5 bitops_1.0-7 rhdf5filters_1.6.0 cachem_1.0.6 ## [41] DelayedArray_0.20.0 assertthat_0.2.1 scales_1.1.1 multcomp_1.4-18 ## [45] nnet_7.3-17 gtable_0.3.0 sandwich_3.0-1 rlang_1.0.2 ## [49] genefilter_1.76.0 splines_4.1.2 protoclust_1.6.3 rstatix_0.7.0 ## [53] broom_0.7.12 checkmate_2.0.0 yaml_2.3.5 reshape2_1.4.4 ## [57] abind_1.4-5 crosstalk_1.2.0 backports_1.4.1 qvalue_2.26.0 ## [61] Hmisc_4.6-0 DiagrammeR_1.0.9 tensorA_0.36.2 tools_4.1.2 ## [65] bookdown_0.24 ellipsis_0.3.2 gplots_3.1.1 jquerylib_0.1.4 ## [69] biomformat_1.22.0 RColorBrewer_1.1-2 BiocGenerics_0.40.0 Rcpp_1.0.8.2 ## [73] plyr_1.8.6 base64enc_0.1-3 visNetwork_2.1.0 zlibbioc_1.40.0 ## [77] purrr_0.3.4 RCurl_1.98-1.6 rpart_4.1.16 Wrench_1.12.0 ## [81] cowplot_1.1.1 S4Vectors_0.32.3 zoo_1.8-9 SummarizedExperiment_1.24.0 ## [85] ggrepel_0.9.1 cluster_2.1.2 magrittr_2.0.2 data.table_1.14.2 ## [89] mvtnorm_1.1-3 matrixStats_0.61.0 corncob_0.2.0 RAIDA_1.0 ## [93] evaluate_0.15 xtable_1.8-4 XML_3.99-0.9 jpeg_0.1-9 ## [97] IRanges_2.28.0 gridExtra_2.3 shape_1.4.6 compiler_4.1.2 ## [101] KernSmooth_2.23-20 crayon_1.5.0 htmltools_0.5.2 mgcv_1.8-39 ## [105] pcaPP_1.9-74 Formula_1.2-4 tidyr_1.2.0 geneplotter_1.72.0 ## [109] libcoin_1.0-9 DBI_1.1.2 biglm_0.9-2.1 MASS_7.3-55 ## [113] compositions_2.0-4 Matrix_1.4-0 ade4_1.7-18 getopt_1.20.3 ## [117] car_3.0-12 permute_0.9-7 cli_3.2.0 parallel_4.1.2 ## [121] igraph_1.2.11 GenomicRanges_1.46.1 pkgconfig_2.0.3 coin_1.4-2 ## [125] foreign_0.8-82 foreach_1.5.2 annotate_1.72.0 bslib_0.3.1 ## [129] multtest_2.50.0 XVector_0.34.0 stringr_1.4.0 digest_0.6.29 ## [133] vegan_2.5-7 Biostrings_2.62.0 rmarkdown_2.13 htmlTable_2.4.0 ## [137] edgeR_3.36.0 gtools_3.9.2 modeltools_0.2-23 lifecycle_1.0.1 ## [141] nlme_3.1-155 jsonlite_1.8.0 Rhdf5lib_1.16.0 carData_3.0-5 ## [145] limma_3.50.1 fansi_1.0.2 pillar_1.7.0 lattice_0.20-45 ## [149] KEGGREST_1.34.0 fastmap_1.1.0 httr_1.4.2 DEoptimR_1.0-10 ## [153] survival_3.3-1 glue_1.6.2 png_0.1-7 iterators_1.0.14 ## [157] glmnet_4.1-3 bit_4.0.4 stringi_1.7.6 sass_0.4.0 ## [161] metagenomeSeq_1.36.0 blob_1.2.2 DESeq2_1.34.0 latticeExtra_0.6-29 ## [165] caTools_1.18.2 memoise_2.0.1 ape_5.6-2 "],["data-processing.html", "Chapter 4 Data processing 4.1 Rarefy otu counts 4.2 Extracting specific taxonomic level 4.3 Filtering the low relative abundance or unclassified taxa by the threshold (total counts &lt; 10) 4.4 Trimming the taxa with low occurrence less than threshold 4.5 Systematic Information", " Chapter 4 Data processing Loading packages library(XMAS) library(dplyr) library(tibble) library(phyloseq) library(ggplot2) library(ggpubr) This part has too may procedures and we only choose some of them. Please go to Chapter 6 to see more approaches and details for being familiar with this part. 4.1 Rarefy otu counts From previous results of quality evaluation, the sequence depth of samples are different which have effects on the downstream analysis. Here, choosing the rarefy (Normaliztion method: random subsampling counts to the smallest library size) to get the equal sample sums. dada2_ps_rare &lt;- normalize(dada2_ps_NoQC, method = &quot;rarefy&quot;) dada2_ps_rare ## phyloseq-class experiment-level object ## otu_table() OTU Table: [ 881 taxa and 23 samples ] ## sample_data() Sample Data: [ 23 samples by 1 sample variables ] ## tax_table() Taxonomy Table: [ 881 taxa by 7 taxonomic ranks ] ## phy_tree() Phylogenetic Tree: [ 881 tips and 878 internal nodes ] ## refseq() DNAStringSet: [ 881 reference sequences ] In addition, we could also perform some other normalization methods on the rarefied phyloseq object. By the way, we didn’t transform the data by using log algorithm because the count matrix is required by the following data analysis methods. 4.2 Extracting specific taxonomic level dada2_ps_rare_genus &lt;- summarize_taxa(dada2_ps_rare, taxa_level = &quot;Genus&quot;) dada2_ps_rare_genus ## phyloseq-class experiment-level object ## otu_table() OTU Table: [ 196 taxa and 23 samples ] ## sample_data() Sample Data: [ 23 samples by 1 sample variables ] ## tax_table() Taxonomy Table: [ 196 taxa by 6 taxonomic ranks ] 4.3 Filtering the low relative abundance or unclassified taxa by the threshold (total counts &lt; 10) dada2_ps_rare_genus_filter &lt;- run_filter(dada2_ps_rare_genus, cutoff = 10, unclass = TRUE) dada2_ps_rare_genus_filter ## phyloseq-class experiment-level object ## otu_table() OTU Table: [ 140 taxa and 23 samples ] ## sample_data() Sample Data: [ 23 samples by 1 sample variables ] ## tax_table() Taxonomy Table: [ 140 taxa by 6 taxonomic ranks ] 4.4 Trimming the taxa with low occurrence less than threshold dada2_ps_rare_genus_filter_trim &lt;- run_trim(dada2_ps_rare_genus_filter, cutoff = 0.2, trim = &quot;feature&quot;) dada2_ps_final &lt;- dada2_ps_rare_genus_filter_trim dada2_ps_final ## phyloseq-class experiment-level object ## otu_table() OTU Table: [ 96 taxa and 23 samples ] ## sample_data() Sample Data: [ 23 samples by 1 sample variables ] ## tax_table() Taxonomy Table: [ 96 taxa by 6 taxonomic ranks ] Finally, we obtained the final phyloseq-class object dada2_ps_rare_genus_filter_trim and changed its name. 4.5 Systematic Information sessionInfo() ## R version 4.1.2 (2021-11-01) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Monterey 12.2.1 ## ## Matrix products: default ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] ggpubr_0.4.0 ggplot2_3.3.5 phyloseq_1.38.0 tibble_3.1.6 dplyr_1.0.8 XMAS_2.1.0 ## ## loaded via a namespace (and not attached): ## [1] utf8_1.2.2 tidyselect_1.1.2 RSQLite_2.2.10 AnnotationDbi_1.56.2 ## [5] htmlwidgets_1.5.4 grid_4.1.2 BiocParallel_1.28.3 munsell_0.5.0 ## [9] codetools_0.2-18 DT_0.21 withr_2.5.0 colorspace_2.0-3 ## [13] Biobase_2.54.0 highr_0.9 knitr_1.37 rstudioapi_0.13 ## [17] stats4_4.1.2 robustbase_0.93-9 bayesm_3.1-4 ggsignif_0.6.3 ## [21] MatrixGenerics_1.6.0 labeling_0.4.2 optparse_1.7.1 GenomeInfoDbData_1.2.7 ## [25] lpsymphony_1.22.0 bit64_4.0.5 farver_2.1.0 pheatmap_1.0.12 ## [29] rhdf5_2.38.1 vctrs_0.3.8 generics_0.1.2 TH.data_1.1-0 ## [33] xfun_0.30 Maaslin2_1.8.0 R6_2.5.1 GenomeInfoDb_1.30.1 ## [37] locfit_1.5-9.5 bitops_1.0-7 rhdf5filters_1.6.0 cachem_1.0.6 ## [41] DelayedArray_0.20.0 assertthat_0.2.1 scales_1.1.1 multcomp_1.4-18 ## [45] nnet_7.3-17 gtable_0.3.0 sandwich_3.0-1 rlang_1.0.2 ## [49] genefilter_1.76.0 splines_4.1.2 protoclust_1.6.3 rstatix_0.7.0 ## [53] broom_0.7.12 checkmate_2.0.0 yaml_2.3.5 reshape2_1.4.4 ## [57] abind_1.4-5 crosstalk_1.2.0 backports_1.4.1 qvalue_2.26.0 ## [61] Hmisc_4.6-0 DiagrammeR_1.0.9 tensorA_0.36.2 tools_4.1.2 ## [65] bookdown_0.24 ellipsis_0.3.2 gplots_3.1.1 jquerylib_0.1.4 ## [69] biomformat_1.22.0 RColorBrewer_1.1-2 BiocGenerics_0.40.0 Rcpp_1.0.8.2 ## [73] plyr_1.8.6 base64enc_0.1-3 visNetwork_2.1.0 zlibbioc_1.40.0 ## [77] purrr_0.3.4 RCurl_1.98-1.6 rpart_4.1.16 Wrench_1.12.0 ## [81] cowplot_1.1.1 S4Vectors_0.32.3 zoo_1.8-9 SummarizedExperiment_1.24.0 ## [85] ggrepel_0.9.1 cluster_2.1.2 magrittr_2.0.2 data.table_1.14.2 ## [89] mvtnorm_1.1-3 matrixStats_0.61.0 corncob_0.2.0 RAIDA_1.0 ## [93] evaluate_0.15 xtable_1.8-4 XML_3.99-0.9 jpeg_0.1-9 ## [97] IRanges_2.28.0 gridExtra_2.3 shape_1.4.6 compiler_4.1.2 ## [101] KernSmooth_2.23-20 crayon_1.5.0 htmltools_0.5.2 mgcv_1.8-39 ## [105] pcaPP_1.9-74 Formula_1.2-4 tidyr_1.2.0 geneplotter_1.72.0 ## [109] libcoin_1.0-9 DBI_1.1.2 biglm_0.9-2.1 MASS_7.3-55 ## [113] compositions_2.0-4 Matrix_1.4-0 ade4_1.7-18 getopt_1.20.3 ## [117] car_3.0-12 permute_0.9-7 cli_3.2.0 parallel_4.1.2 ## [121] igraph_1.2.11 GenomicRanges_1.46.1 pkgconfig_2.0.3 coin_1.4-2 ## [125] foreign_0.8-82 foreach_1.5.2 annotate_1.72.0 bslib_0.3.1 ## [129] multtest_2.50.0 XVector_0.34.0 stringr_1.4.0 digest_0.6.29 ## [133] vegan_2.5-7 Biostrings_2.62.0 rmarkdown_2.13 htmlTable_2.4.0 ## [137] edgeR_3.36.0 gtools_3.9.2 modeltools_0.2-23 lifecycle_1.0.1 ## [141] nlme_3.1-155 jsonlite_1.8.0 Rhdf5lib_1.16.0 carData_3.0-5 ## [145] limma_3.50.1 fansi_1.0.2 pillar_1.7.0 lattice_0.20-45 ## [149] KEGGREST_1.34.0 fastmap_1.1.0 httr_1.4.2 DEoptimR_1.0-10 ## [153] survival_3.3-1 glue_1.6.2 png_0.1-7 iterators_1.0.14 ## [157] glmnet_4.1-3 bit_4.0.4 stringi_1.7.6 sass_0.4.0 ## [161] metagenomeSeq_1.36.0 blob_1.2.2 DESeq2_1.34.0 latticeExtra_0.6-29 ## [165] caTools_1.18.2 memoise_2.0.1 ape_5.6-2 "],["diversity-analysis.html", "Chapter 5 Diversity analysis 5.1 Alpha diveristy 5.2 Beta diversity 5.3 Systematic Information", " Chapter 5 Diversity analysis Loading packages library(XMAS) library(dplyr) library(tibble) library(phyloseq) library(ggplot2) library(ggpubr) 5.1 Alpha diveristy Calculate the alpha diversity Notes: the otu table must be counts matrix (rarefied but not trim counts matrix) when you choose Observed etc measures. dada_ps_rare_genus_alpha &lt;- run_alpha_diversity(ps=dada2_ps_rare_genus, measures = c(&quot;Shannon&quot;, &quot;Chao1&quot;, &quot;Observed&quot;)) print(dada_ps_rare_genus_alpha) ## SampleID Group Observed Chao1 se.chao1 Shannon ## 1 S6030 BB 73 74.66667 2.20420289 2.625015 ## 2 S6032 BB 38 38.33333 0.92351054 1.706103 ## 3 S6033 BB 78 81.75000 4.20661800 2.715398 ## 4 S6035 AA 34 34.60000 1.18427266 1.950613 ## 5 S6036 BB 90 90.50000 1.02680466 2.926823 ## 6 S6037 AA 35 35.00000 0.24640269 1.940912 ## 7 S6040 BB 58 58.00000 0.07081013 2.490386 ## 8 S6043 AA 64 64.42857 0.91243464 2.100695 ## 9 S6045 BB 59 59.50000 1.29539423 2.914391 ## 10 S6046 BB 70 70.20000 0.62095047 2.261940 ## 11 S6048 BB 66 66.33333 0.92468743 2.622039 ## 12 S6049 AA 60 60.00000 0.16527194 2.505391 ## 13 S6050 BB 52 53.50000 2.58996987 2.437949 ## 14 S6054 BB 83 83.00000 0.16565961 2.765414 ## 15 S6055 BB 74 74.00000 0.12415253 2.302557 ## 16 S6058 BB 36 36.00000 0.12325166 2.266876 ## 17 S6059 AA 71 71.25000 0.73593351 2.680326 ## 18 S6060 AA 44 47.75000 4.20366887 1.873090 ## 19 S6061 AA 80 80.00000 0.16562172 3.089127 ## 20 S6063 BB 38 38.00000 0.09867544 1.541715 ## 21 S6065 AA 74 74.00000 0.00000000 2.876134 ## 22 S6066 AA 67 67.75000 1.42220728 2.645127 ## 23 S6068 BB 40 40.50000 1.29368122 2.087037 visualization plot_boxplot(data=dada_ps_rare_genus_alpha, y_index = c(&quot;Shannon&quot;, &quot;Chao1&quot;, &quot;Observed&quot;), group = &quot;Group&quot;, group_names = c(&quot;AA&quot;, &quot;BB&quot;), group_color = c(&quot;red&quot;, &quot;blue&quot;), do_test = TRUE, method = &quot;wilcox.test&quot;) Figure 5.1: Alpha diversity (16s example) 5.2 Beta diversity beta dipersion dada2_ps_beta &lt;- run_beta_diversity(ps=dada2_ps_final, method = &quot;bray&quot;, group = &quot;Group&quot;) ## ## Permutation test for homogeneity of multivariate dispersions ## Permutation: free ## Number of permutations: 999 ## ## Response: Distances ## Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) ## Groups 1 0.014401 0.0144006 1.7097 999 0.193 ## Residuals 21 0.176885 0.0084231 ## ## Pairwise comparisons: ## (Observed p-value below diagonal, permuted p-value above diagonal) ## AA BB ## AA 0.209 ## BB 0.20517 dada2_ps_beta$BetaDispersion Figure 5.2: Beta diversity (16s example) 5.3 Systematic Information sessionInfo() ## R version 4.1.2 (2021-11-01) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Monterey 12.2.1 ## ## Matrix products: default ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] ggpubr_0.4.0 ggplot2_3.3.5 phyloseq_1.38.0 tibble_3.1.6 dplyr_1.0.8 XMAS_2.1.0 ## ## loaded via a namespace (and not attached): ## [1] utf8_1.2.2 tidyselect_1.1.2 RSQLite_2.2.10 AnnotationDbi_1.56.2 ## [5] htmlwidgets_1.5.4 grid_4.1.2 BiocParallel_1.28.3 munsell_0.5.0 ## [9] codetools_0.2-18 DT_0.21 withr_2.5.0 colorspace_2.0-3 ## [13] Biobase_2.54.0 highr_0.9 knitr_1.37 rstudioapi_0.13 ## [17] stats4_4.1.2 robustbase_0.93-9 bayesm_3.1-4 ggsignif_0.6.3 ## [21] MatrixGenerics_1.6.0 labeling_0.4.2 optparse_1.7.1 GenomeInfoDbData_1.2.7 ## [25] lpsymphony_1.22.0 bit64_4.0.5 farver_2.1.0 pheatmap_1.0.12 ## [29] rhdf5_2.38.1 vctrs_0.3.8 generics_0.1.2 TH.data_1.1-0 ## [33] xfun_0.30 Maaslin2_1.8.0 R6_2.5.1 GenomeInfoDb_1.30.1 ## [37] locfit_1.5-9.5 bitops_1.0-7 rhdf5filters_1.6.0 cachem_1.0.6 ## [41] DelayedArray_0.20.0 assertthat_0.2.1 scales_1.1.1 multcomp_1.4-18 ## [45] nnet_7.3-17 gtable_0.3.0 sandwich_3.0-1 rlang_1.0.2 ## [49] genefilter_1.76.0 splines_4.1.2 protoclust_1.6.3 rstatix_0.7.0 ## [53] broom_0.7.12 checkmate_2.0.0 yaml_2.3.5 reshape2_1.4.4 ## [57] abind_1.4-5 crosstalk_1.2.0 backports_1.4.1 qvalue_2.26.0 ## [61] Hmisc_4.6-0 DiagrammeR_1.0.9 tensorA_0.36.2 tools_4.1.2 ## [65] bookdown_0.24 ellipsis_0.3.2 gplots_3.1.1 jquerylib_0.1.4 ## [69] biomformat_1.22.0 RColorBrewer_1.1-2 BiocGenerics_0.40.0 Rcpp_1.0.8.2 ## [73] plyr_1.8.6 base64enc_0.1-3 visNetwork_2.1.0 zlibbioc_1.40.0 ## [77] purrr_0.3.4 RCurl_1.98-1.6 rpart_4.1.16 Wrench_1.12.0 ## [81] cowplot_1.1.1 S4Vectors_0.32.3 zoo_1.8-9 SummarizedExperiment_1.24.0 ## [85] ggrepel_0.9.1 cluster_2.1.2 magrittr_2.0.2 data.table_1.14.2 ## [89] mvtnorm_1.1-3 matrixStats_0.61.0 corncob_0.2.0 RAIDA_1.0 ## [93] evaluate_0.15 xtable_1.8-4 XML_3.99-0.9 jpeg_0.1-9 ## [97] IRanges_2.28.0 gridExtra_2.3 shape_1.4.6 compiler_4.1.2 ## [101] KernSmooth_2.23-20 crayon_1.5.0 htmltools_0.5.2 mgcv_1.8-39 ## [105] pcaPP_1.9-74 Formula_1.2-4 tidyr_1.2.0 geneplotter_1.72.0 ## [109] libcoin_1.0-9 DBI_1.1.2 biglm_0.9-2.1 MASS_7.3-55 ## [113] compositions_2.0-4 Matrix_1.4-0 ade4_1.7-18 getopt_1.20.3 ## [117] car_3.0-12 permute_0.9-7 cli_3.2.0 parallel_4.1.2 ## [121] igraph_1.2.11 GenomicRanges_1.46.1 pkgconfig_2.0.3 coin_1.4-2 ## [125] foreign_0.8-82 foreach_1.5.2 annotate_1.72.0 bslib_0.3.1 ## [129] multtest_2.50.0 XVector_0.34.0 stringr_1.4.0 digest_0.6.29 ## [133] vegan_2.5-7 Biostrings_2.62.0 rmarkdown_2.13 htmlTable_2.4.0 ## [137] edgeR_3.36.0 gtools_3.9.2 modeltools_0.2-23 lifecycle_1.0.1 ## [141] nlme_3.1-155 jsonlite_1.8.0 Rhdf5lib_1.16.0 carData_3.0-5 ## [145] limma_3.50.1 fansi_1.0.2 pillar_1.7.0 lattice_0.20-45 ## [149] KEGGREST_1.34.0 fastmap_1.1.0 httr_1.4.2 DEoptimR_1.0-10 ## [153] survival_3.3-1 glue_1.6.2 png_0.1-7 iterators_1.0.14 ## [157] glmnet_4.1-3 bit_4.0.4 stringi_1.7.6 sass_0.4.0 ## [161] metagenomeSeq_1.36.0 blob_1.2.2 DESeq2_1.34.0 latticeExtra_0.6-29 ## [165] caTools_1.18.2 memoise_2.0.1 ape_5.6-2 "],["permanova-beta-dispersion-ordination.html", "Chapter 6 PERMANOVA + beta dispersion + Ordination 6.1 PERMANOVA 6.2 beta dispersion 6.3 Ordination 6.4 Systematic Information", " Chapter 6 PERMANOVA + beta dispersion + Ordination Loading packages library(XMAS) library(dplyr) library(tibble) library(phyloseq) library(ggplot2) library(ggpubr) 6.1 PERMANOVA dada2_ps_per &lt;- run_permanova(ps=dada2_ps_final, method = &quot;bray&quot;) print(dada2_ps_per) ## SumsOfSample Df SumsOfSqs MeanSqs F.Model R2 Pr(&gt;F) AdjustedPvalue ## SampleID 23 22 3.8334625 0.1742483 0.000000 1.00000000 1.000 1.000 ## Group 23 1 0.2303178 0.2303178 1.342348 0.06008087 0.217 0.434 The PERMANOVA result of the Group (AdjustedPvalue &gt; 0.05) revealed that the two groups had not the distinct patterns of microbial community. 6.2 beta dispersion beta_df &lt;- run_beta_diversity(ps=dada2_ps_final, method = &quot;bray&quot;, group = &quot;Group&quot;) ## ## Permutation test for homogeneity of multivariate dispersions ## Permutation: free ## Number of permutations: 999 ## ## Response: Distances ## Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) ## Groups 1 0.014401 0.0144006 1.7097 999 0.193 ## Residuals 21 0.176885 0.0084231 ## ## Pairwise comparisons: ## (Observed p-value below diagonal, permuted p-value above diagonal) ## AA BB ## AA 0.209 ## BB 0.20517 6.3 Ordination We performed ordination by using Principal Coordinate Analysis (PCoA). If you want to try other methods please go to see Chapter 8 for more details. dada2_ps_ordination &lt;- run_ordination( ps = dada2_ps_final, group = &quot;Group&quot;, method = &quot;PCoA&quot;) plot_Ordination(ResultList = dada2_ps_ordination, group = &quot;Group&quot;, group_names = c(&quot;AA&quot;, &quot;BB&quot;), group_color = c(&quot;blue&quot;, &quot;red&quot;)) Figure 6.1: PCoA (16s example) 6.4 Systematic Information sessionInfo() ## R version 4.1.2 (2021-11-01) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Monterey 12.2.1 ## ## Matrix products: default ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] ggpubr_0.4.0 ggplot2_3.3.5 phyloseq_1.38.0 tibble_3.1.6 dplyr_1.0.8 XMAS_2.1.0 ## ## loaded via a namespace (and not attached): ## [1] utf8_1.2.2 tidyselect_1.1.2 RSQLite_2.2.10 AnnotationDbi_1.56.2 ## [5] htmlwidgets_1.5.4 grid_4.1.2 BiocParallel_1.28.3 munsell_0.5.0 ## [9] codetools_0.2-18 DT_0.21 withr_2.5.0 colorspace_2.0-3 ## [13] Biobase_2.54.0 highr_0.9 knitr_1.37 rstudioapi_0.13 ## [17] stats4_4.1.2 robustbase_0.93-9 bayesm_3.1-4 ggsignif_0.6.3 ## [21] MatrixGenerics_1.6.0 labeling_0.4.2 optparse_1.7.1 GenomeInfoDbData_1.2.7 ## [25] lpsymphony_1.22.0 bit64_4.0.5 farver_2.1.0 pheatmap_1.0.12 ## [29] rhdf5_2.38.1 vctrs_0.3.8 generics_0.1.2 TH.data_1.1-0 ## [33] xfun_0.30 Maaslin2_1.8.0 R6_2.5.1 GenomeInfoDb_1.30.1 ## [37] locfit_1.5-9.5 bitops_1.0-7 rhdf5filters_1.6.0 cachem_1.0.6 ## [41] DelayedArray_0.20.0 assertthat_0.2.1 scales_1.1.1 multcomp_1.4-18 ## [45] nnet_7.3-17 gtable_0.3.0 sandwich_3.0-1 rlang_1.0.2 ## [49] genefilter_1.76.0 splines_4.1.2 protoclust_1.6.3 rstatix_0.7.0 ## [53] broom_0.7.12 checkmate_2.0.0 yaml_2.3.5 reshape2_1.4.4 ## [57] abind_1.4-5 crosstalk_1.2.0 backports_1.4.1 qvalue_2.26.0 ## [61] Hmisc_4.6-0 DiagrammeR_1.0.9 tensorA_0.36.2 tools_4.1.2 ## [65] bookdown_0.24 ellipsis_0.3.2 gplots_3.1.1 jquerylib_0.1.4 ## [69] biomformat_1.22.0 RColorBrewer_1.1-2 BiocGenerics_0.40.0 Rcpp_1.0.8.2 ## [73] plyr_1.8.6 base64enc_0.1-3 visNetwork_2.1.0 zlibbioc_1.40.0 ## [77] purrr_0.3.4 RCurl_1.98-1.6 rpart_4.1.16 Wrench_1.12.0 ## [81] cowplot_1.1.1 S4Vectors_0.32.3 zoo_1.8-9 SummarizedExperiment_1.24.0 ## [85] ggrepel_0.9.1 cluster_2.1.2 magrittr_2.0.2 data.table_1.14.2 ## [89] mvtnorm_1.1-3 matrixStats_0.61.0 corncob_0.2.0 RAIDA_1.0 ## [93] evaluate_0.15 xtable_1.8-4 XML_3.99-0.9 jpeg_0.1-9 ## [97] IRanges_2.28.0 gridExtra_2.3 shape_1.4.6 compiler_4.1.2 ## [101] KernSmooth_2.23-20 crayon_1.5.0 htmltools_0.5.2 mgcv_1.8-39 ## [105] pcaPP_1.9-74 Formula_1.2-4 tidyr_1.2.0 geneplotter_1.72.0 ## [109] libcoin_1.0-9 DBI_1.1.2 biglm_0.9-2.1 MASS_7.3-55 ## [113] compositions_2.0-4 Matrix_1.4-0 ade4_1.7-18 getopt_1.20.3 ## [117] car_3.0-12 permute_0.9-7 cli_3.2.0 parallel_4.1.2 ## [121] igraph_1.2.11 GenomicRanges_1.46.1 pkgconfig_2.0.3 coin_1.4-2 ## [125] foreign_0.8-82 foreach_1.5.2 annotate_1.72.0 bslib_0.3.1 ## [129] multtest_2.50.0 XVector_0.34.0 stringr_1.4.0 digest_0.6.29 ## [133] vegan_2.5-7 Biostrings_2.62.0 rmarkdown_2.13 htmlTable_2.4.0 ## [137] edgeR_3.36.0 gtools_3.9.2 modeltools_0.2-23 lifecycle_1.0.1 ## [141] nlme_3.1-155 jsonlite_1.8.0 Rhdf5lib_1.16.0 carData_3.0-5 ## [145] limma_3.50.1 fansi_1.0.2 pillar_1.7.0 lattice_0.20-45 ## [149] KEGGREST_1.34.0 fastmap_1.1.0 httr_1.4.2 DEoptimR_1.0-10 ## [153] survival_3.3-1 glue_1.6.2 png_0.1-7 iterators_1.0.14 ## [157] glmnet_4.1-3 bit_4.0.4 stringi_1.7.6 sass_0.4.0 ## [161] metagenomeSeq_1.36.0 blob_1.2.2 DESeq2_1.34.0 latticeExtra_0.6-29 ## [165] caTools_1.18.2 memoise_2.0.1 ape_5.6-2 "],["microbial-composition.html", "Chapter 7 Microbial composition 7.1 Stacked barplot 7.2 Core microbiota 7.3 Systematic Information", " Chapter 7 Microbial composition Loading packages library(XMAS) library(dplyr) library(tibble) library(phyloseq) library(ggplot2) library(ggpubr) A whole picture of the microbial composition. 7.1 Stacked barplot XMAS package plot_StackBarPlot( ps=dada2_ps_rare, taxa_level=&quot;Phylum&quot;, group = &quot;Group&quot;, cluster = TRUE) Figure 7.1: Microbial composition (16s example) XVIZ package plot_stacked_bar( phyloseq = dada2_ps_rare, level = &quot;Phylum&quot;, feature = &quot;Group&quot;) Figure 7.2: Microbial composition (16s example) XVIZ 7.2 Core microbiota convert absolute abundance into relative abundance dada2_ps_final_rb &lt;- normalize(dada2_ps_final, method = &quot;TSS&quot;) dada2_ps_final_rb ## phyloseq-class experiment-level object ## otu_table() OTU Table: [ 96 taxa and 23 samples ] ## sample_data() Sample Data: [ 23 samples by 1 sample variables ] ## tax_table() Taxonomy Table: [ 96 taxa by 6 taxonomic ranks ] visualization prevalences &lt;- seq(0.05, 1, 0.05) detections &lt;- 10^seq(log10(1e-3), log10(0.2), length = 10) pl_core &lt;- plot_core_taxa(dada2_ps_final_rb, plot.type = &quot;heatmap&quot;, colours = gray(seq(0, 1, length=5)), prevalences = prevalences, detections = detections, min.prevalence = 0.5)+ xlab(&quot;Detection Threshold (Relative Abundance (%))&quot;) pl_core Figure 7.3: Core taxa (16s example) The degree of color indicates the size of abundance and prevalence. Use core_members to obtain the core taxa. detection for abundance and prevalence for occurrence. core_taxa_name &lt;- core_members(dada2_ps_final_rb, detection = 0.01, prevalence = 0.8) print(core_taxa_name) ## [1] &quot;g__Bifidobacterium&quot; &quot;g__Blautia&quot; Result: Only 2 genera (g__Bifidobacterium and g__Blautia) passed the threshold of detection and prevalence which we choose. 7.3 Systematic Information sessionInfo() ## R version 4.1.2 (2021-11-01) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Monterey 12.2.1 ## ## Matrix products: default ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] ggpubr_0.4.0 ggplot2_3.3.5 phyloseq_1.38.0 tibble_3.1.6 dplyr_1.0.8 XMAS_2.1.0 ## ## loaded via a namespace (and not attached): ## [1] utf8_1.2.2 tidyselect_1.1.2 RSQLite_2.2.10 AnnotationDbi_1.56.2 ## [5] htmlwidgets_1.5.4 grid_4.1.2 BiocParallel_1.28.3 munsell_0.5.0 ## [9] codetools_0.2-18 DT_0.21 withr_2.5.0 colorspace_2.0-3 ## [13] Biobase_2.54.0 highr_0.9 knitr_1.37 rstudioapi_0.13 ## [17] stats4_4.1.2 robustbase_0.93-9 bayesm_3.1-4 ggsignif_0.6.3 ## [21] MatrixGenerics_1.6.0 labeling_0.4.2 optparse_1.7.1 GenomeInfoDbData_1.2.7 ## [25] lpsymphony_1.22.0 bit64_4.0.5 farver_2.1.0 pheatmap_1.0.12 ## [29] rhdf5_2.38.1 vctrs_0.3.8 generics_0.1.2 TH.data_1.1-0 ## [33] xfun_0.30 Maaslin2_1.8.0 R6_2.5.1 GenomeInfoDb_1.30.1 ## [37] locfit_1.5-9.5 bitops_1.0-7 rhdf5filters_1.6.0 cachem_1.0.6 ## [41] DelayedArray_0.20.0 assertthat_0.2.1 scales_1.1.1 multcomp_1.4-18 ## [45] nnet_7.3-17 gtable_0.3.0 sandwich_3.0-1 rlang_1.0.2 ## [49] genefilter_1.76.0 splines_4.1.2 protoclust_1.6.3 rstatix_0.7.0 ## [53] broom_0.7.12 checkmate_2.0.0 yaml_2.3.5 reshape2_1.4.4 ## [57] abind_1.4-5 crosstalk_1.2.0 backports_1.4.1 qvalue_2.26.0 ## [61] Hmisc_4.6-0 DiagrammeR_1.0.9 tensorA_0.36.2 tools_4.1.2 ## [65] bookdown_0.24 ellipsis_0.3.2 gplots_3.1.1 jquerylib_0.1.4 ## [69] biomformat_1.22.0 RColorBrewer_1.1-2 BiocGenerics_0.40.0 Rcpp_1.0.8.2 ## [73] plyr_1.8.6 base64enc_0.1-3 visNetwork_2.1.0 zlibbioc_1.40.0 ## [77] purrr_0.3.4 RCurl_1.98-1.6 rpart_4.1.16 Wrench_1.12.0 ## [81] cowplot_1.1.1 S4Vectors_0.32.3 zoo_1.8-9 SummarizedExperiment_1.24.0 ## [85] ggrepel_0.9.1 cluster_2.1.2 magrittr_2.0.2 data.table_1.14.2 ## [89] mvtnorm_1.1-3 matrixStats_0.61.0 corncob_0.2.0 RAIDA_1.0 ## [93] evaluate_0.15 xtable_1.8-4 XML_3.99-0.9 jpeg_0.1-9 ## [97] IRanges_2.28.0 gridExtra_2.3 shape_1.4.6 compiler_4.1.2 ## [101] KernSmooth_2.23-20 crayon_1.5.0 htmltools_0.5.2 mgcv_1.8-39 ## [105] pcaPP_1.9-74 Formula_1.2-4 tidyr_1.2.0 geneplotter_1.72.0 ## [109] libcoin_1.0-9 DBI_1.1.2 biglm_0.9-2.1 MASS_7.3-55 ## [113] compositions_2.0-4 Matrix_1.4-0 ade4_1.7-18 getopt_1.20.3 ## [117] car_3.0-12 permute_0.9-7 cli_3.2.0 parallel_4.1.2 ## [121] igraph_1.2.11 GenomicRanges_1.46.1 pkgconfig_2.0.3 coin_1.4-2 ## [125] foreign_0.8-82 foreach_1.5.2 annotate_1.72.0 bslib_0.3.1 ## [129] multtest_2.50.0 XVector_0.34.0 stringr_1.4.0 digest_0.6.29 ## [133] vegan_2.5-7 Biostrings_2.62.0 rmarkdown_2.13 htmlTable_2.4.0 ## [137] edgeR_3.36.0 gtools_3.9.2 modeltools_0.2-23 lifecycle_1.0.1 ## [141] nlme_3.1-155 jsonlite_1.8.0 Rhdf5lib_1.16.0 carData_3.0-5 ## [145] limma_3.50.1 fansi_1.0.2 pillar_1.7.0 lattice_0.20-45 ## [149] KEGGREST_1.34.0 fastmap_1.1.0 httr_1.4.2 DEoptimR_1.0-10 ## [153] survival_3.3-1 glue_1.6.2 png_0.1-7 iterators_1.0.14 ## [157] glmnet_4.1-3 bit_4.0.4 stringi_1.7.6 sass_0.4.0 ## [161] metagenomeSeq_1.36.0 blob_1.2.2 DESeq2_1.34.0 latticeExtra_0.6-29 ## [165] caTools_1.18.2 memoise_2.0.1 ape_5.6-2 "],["differential-analysis.html", "Chapter 8 Differential Analysis 8.1 Liner discriminant analysis (LDA) effect size (LEfSe) 8.2 Wilcoxon Rank-Sum test 8.3 Dominant taxa 8.4 Multiple differential analysis by one function 8.5 Systematic Information", " Chapter 8 Differential Analysis Loading packages library(XMAS) library(dplyr) library(tibble) library(phyloseq) library(ggplot2) library(ggpubr) There are more than 10 approaches to perform differential analysis. Here, we choose two of them and recommend users going to Chapter 10 to see more detials. 8.1 Liner discriminant analysis (LDA) effect size (LEfSe) Calculation dada2_ps_lefse &lt;- run_lefse( dada2_ps_final, group = &quot;Group&quot;, group_names = c(&quot;AA&quot;, &quot;BB&quot;), transform = &quot;identity&quot;, norm = &quot;none&quot;, wl.p = 0.05, Lda = 0) head(dada2_ps_lefse) ## TaxaID Block Enrichment LDA_Score EffectSize Log2FoldChange (Median)\\nAA_vs_BB ## 1 g__Ruminococcaceae_UCG_004 9_AA vs 14_BB BB 0.06303223 49.49206 NA ## 2 g__Odoribacter 9_AA vs 14_BB BB 1.24227645 19.65079 NA ## 3 g__Romboutsia 9_AA vs 14_BB BB 2.07127520 203.53968 -6.082149 ## 4 g__Lactobacillus 9_AA vs 14_BB BB 2.40653226 605.06349 -2.807355 ## Median Abundance\\n(All) Median Abundance\\nAA Median Abundance\\nBB Log2FoldChange (Mean)\\nAA_vs_BB ## 1 4 55 0.0 2.240378 ## 2 1 13 0.0 2.178576 ## 3 49 2 135.5 -3.306337 ## 4 26 13 91.0 -5.096123 ## Mean Abundance\\n(All) Mean Abundance\\nAA Mean Abundance\\nBB Occurrence (100%)\\n(All) Occurrence (100%)\\nAA ## 1 32.65217 62.77778 13.285714 52.17 77.78 ## 2 13.26087 25.22222 5.571429 52.17 77.78 ## 3 146.78261 22.88889 226.428571 78.26 55.56 ## 4 386.52174 18.22222 623.285714 86.96 77.78 ## Occurrence (100%)\\nBB Odds Ratio (95% CI) ## 1 35.71 0.2 (-3;3.4) ## 2 35.71 0.28 (-2.2;2.8) ## 3 92.86 62 (70;54) ## 4 92.86 9.7e+07 (9.7e+07;9.7e+07) Visualization # in order to show barplot (don&#39;t run it in reality) dada2_ps_lefse$LDA_Score &lt;- dada2_ps_lefse$LDA_Score * 1000 plot_lefse( da_res = dada2_ps_lefse, x_index = &quot;LDA_Score&quot;, x_index_cutoff = 2, group_color = c(&quot;green&quot;, &quot;red&quot;)) Figure 8.1: Lefse analysis (16s example) 8.2 Wilcoxon Rank-Sum test Calculation dada2_ps_wilcox &lt;- run_wilcox( dada2_ps_final, group = &quot;Group&quot;, group_names = c(&quot;AA&quot;, &quot;BB&quot;), transform = &quot;identity&quot;, norm = &quot;none&quot;, p_adjust = &quot;BH&quot;, pvalue_cutoff = 0.05) head(dada2_ps_wilcox) ## TaxaID Block Enrichment EffectSize Statistic Pvalue AdjustedPvalue ## 1 g__Actinomyces 9_AA vs 14_BB Nonsignif 19.78571 41.5 0.1845700 0.7114368 ## 2 g__Adlercreutzia 9_AA vs 14_BB Nonsignif 10.67460 44.0 0.1981520 0.7114368 ## 3 g__Agathobacter 9_AA vs 14_BB Nonsignif 582.63492 71.0 0.6293971 0.8940836 ## 4 g__Alistipes 9_AA vs 14_BB Nonsignif 17.40476 68.0 0.7748563 0.8940836 ## 5 g__Anaerostipes 9_AA vs 14_BB Nonsignif 26.72222 57.0 0.7343041 0.8940836 ## 6 g__Bacteroides 9_AA vs 14_BB Nonsignif 1979.36508 89.0 0.1093014 0.7114368 ## Log2FoldChange (Median)\\nAA_vs_BB Median Abundance\\n(All) Median Abundance\\nAA Median Abundance\\nBB ## 1 -1.4594316 14 8 22.0 ## 2 NA 0 0 3.0 ## 3 0.1570212 148 160 143.5 ## 4 -0.1699250 32 32 36.0 ## 5 1.0312284 252 467 228.5 ## 6 1.5811230 1889 4503 1505.0 ## Log2FoldChange (Rank)\\nAA_vs_BB Mean Rank Abundance\\nAA Mean Rank Abundance\\nBB Occurrence (100%)\\n(All) ## 1 -0.4946194 9.61 13.54 82.61 ## 2 -0.4338776 9.89 13.36 43.48 ## 3 0.1734269 12.89 11.43 65.22 ## 4 0.1097454 12.56 11.64 73.91 ## 5 -0.1336784 11.33 12.43 95.65 ## 6 0.5542861 14.89 10.14 100.00 ## Occurrence (100%)\\nAA Occurrence (100%)\\nBB Odds Ratio (95% CI) ## 1 88.89 78.57 4.4 (7.3;1.5) ## 2 33.33 50.00 10 (15;5.9) ## 3 55.56 71.43 0.4 (-1.4;2.2) ## 4 77.78 71.43 0.82 (0.45;1.2) ## 5 100.00 92.86 1.1 (1.2;0.94) ## 6 100.00 100.00 0.45 (-1.1;2) Volcano plot_volcano( dada2_ps_wilcox, group_names = c(&quot;AA&quot;, &quot;BB&quot;), x_index = &quot;Log2FoldChange (Rank)\\nAA_vs_BB&quot;, x_index_cutoff = 0.5, y_index = &quot;Pvalue&quot;, y_index_cutoff = 0.05, group_color = c(&quot;red&quot;, &quot;grey&quot;, &quot;blue&quot;), topN = 5) Figure 8.2: Wilcoxon Rank-Sum test (16s example) 8.3 Dominant taxa Display the significant taxa with selection using boxplot. DA_wilcox &lt;- run_wilcox( dada2_ps_final, group = &quot;Group&quot;, group_names = c(&quot;AA&quot;, &quot;BB&quot;), transform = &quot;identity&quot;, norm = &quot;none&quot;, p_adjust = &quot;BH&quot;, pvalue_cutoff = 0.05) plot_topN_boxplot( ps = dada2_ps_final, da_res = DA_wilcox, x_index = &quot;Log2FoldChange (Median)\\nAA_vs_BB&quot;, x_index_cutoff = 0.2, y_index = &quot;Pvalue&quot;, y_index_cutoff = 0.3, prevalence = TRUE, topN = 3, group = &quot;Group&quot;) Figure 8.3: Dominant Taxa 8.4 Multiple differential analysis by one function here, we provide the run_multiple_da for obtaining the results list from multiple differential analysis methods. multiple_res &lt;- run_multiple_da( dada2_ps_final, group = &quot;Group&quot;, group_names = c(&quot;AA&quot;, &quot;BB&quot;), da_method = c(&quot;aldex&quot;, &quot;limma_voom&quot;, &quot;mbzinb&quot;, &quot;omnibus&quot;), norm = &quot;none&quot;, transform = &quot;identity&quot;, p_adjust = &quot;none&quot;, pvalue_cutoff = 0.05) ## Start GMPR normalization ... ## Start Winsorization ... ## Perform filtering ... ## --A total of 66 taxa will be tested with a sample size of 23 ! ## --Omnibus test is selected! ## --Dispersion is treated as a parameter of interest! ## Start testing ... ## 10 % ## 20 % ## 30 % ## 40 % ## 50 % ## 60 % ## 70 % ## 80 % ## 90 % ## 100%! ## Handle failed taxa using permutation test! ## Permutation test .... ## Completed! names(multiple_res) ## [1] &quot;aldex&quot; &quot;limma_voom&quot; &quot;mbzinb&quot; &quot;omnibus&quot; plot results plot_multiple_DA( Multip_DA_res = multiple_res, y_index = &quot;AdjustedPvalue&quot;, y_index_cutoff = 0.5, cellwidth = 35, cellheight = 10, fontsize_number = 15) Figure 8.4: Multiple DA results 8.5 Systematic Information sessionInfo() ## R version 4.1.2 (2021-11-01) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Monterey 12.2.1 ## ## Matrix products: default ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] ggpubr_0.4.0 ggplot2_3.3.5 phyloseq_1.38.0 tibble_3.1.6 dplyr_1.0.8 XMAS_2.1.0 ## ## loaded via a namespace (and not attached): ## [1] utf8_1.2.2 tidyselect_1.1.2 RSQLite_2.2.10 AnnotationDbi_1.56.2 ## [5] htmlwidgets_1.5.4 grid_4.1.2 BiocParallel_1.28.3 munsell_0.5.0 ## [9] codetools_0.2-18 DT_0.21 withr_2.5.0 colorspace_2.0-3 ## [13] Biobase_2.54.0 highr_0.9 knitr_1.37 rstudioapi_0.13 ## [17] pscl_1.5.5 stats4_4.1.2 robustbase_0.93-9 bayesm_3.1-4 ## [21] ggsignif_0.6.3 MatrixGenerics_1.6.0 labeling_0.4.2 optparse_1.7.1 ## [25] mbzinb_0.2 GenomeInfoDbData_1.2.7 lpsymphony_1.22.0 bit64_4.0.5 ## [29] farver_2.1.0 pheatmap_1.0.12 rhdf5_2.38.1 vctrs_0.3.8 ## [33] generics_0.1.2 TH.data_1.1-0 xfun_0.30 Maaslin2_1.8.0 ## [37] R6_2.5.1 GenomeInfoDb_1.30.1 locfit_1.5-9.5 RcppZiggurat_0.1.6 ## [41] bitops_1.0-7 rhdf5filters_1.6.0 cachem_1.0.6 DelayedArray_0.20.0 ## [45] assertthat_0.2.1 scales_1.1.1 multcomp_1.4-18 nnet_7.3-17 ## [49] gtable_0.3.0 sandwich_3.0-1 rlang_1.0.2 genefilter_1.76.0 ## [53] splines_4.1.2 protoclust_1.6.3 rstatix_0.7.0 broom_0.7.12 ## [57] checkmate_2.0.0 yaml_2.3.5 reshape2_1.4.4 abind_1.4-5 ## [61] crosstalk_1.2.0 backports_1.4.1 Rfast_2.0.6 qvalue_2.26.0 ## [65] Hmisc_4.6-0 DiagrammeR_1.0.9 tensorA_0.36.2 tools_4.1.2 ## [69] bookdown_0.24 zCompositions_1.4.0 ellipsis_0.3.2 gplots_3.1.1 ## [73] jquerylib_0.1.4 biomformat_1.22.0 RColorBrewer_1.1-2 BiocGenerics_0.40.0 ## [77] Rcpp_1.0.8.2 plyr_1.8.6 base64enc_0.1-3 visNetwork_2.1.0 ## [81] zlibbioc_1.40.0 purrr_0.3.4 RCurl_1.98-1.6 rpart_4.1.16 ## [85] Wrench_1.12.0 cowplot_1.1.1 S4Vectors_0.32.3 zoo_1.8-9 ## [89] SummarizedExperiment_1.24.0 ggrepel_0.9.1 cluster_2.1.2 magrittr_2.0.2 ## [93] data.table_1.14.2 truncnorm_1.0-8 mvtnorm_1.1-3 matrixStats_0.61.0 ## [97] ALDEx2_1.26.0 corncob_0.2.0 RAIDA_1.0 evaluate_0.15 ## [101] xtable_1.8-4 XML_3.99-0.9 jpeg_0.1-9 IRanges_2.28.0 ## [105] gridExtra_2.3 shape_1.4.6 compiler_4.1.2 KernSmooth_2.23-20 ## [109] crayon_1.5.0 htmltools_0.5.2 mgcv_1.8-39 pcaPP_1.9-74 ## [113] Formula_1.2-4 tidyr_1.2.0 geneplotter_1.72.0 libcoin_1.0-9 ## [117] DBI_1.1.2 biglm_0.9-2.1 MASS_7.3-55 compositions_2.0-4 ## [121] Matrix_1.4-0 ade4_1.7-18 getopt_1.20.3 car_3.0-12 ## [125] permute_0.9-7 cli_3.2.0 parallel_4.1.2 igraph_1.2.11 ## [129] GenomicRanges_1.46.1 pkgconfig_2.0.3 coin_1.4-2 foreign_0.8-82 ## [133] foreach_1.5.2 annotate_1.72.0 bslib_0.3.1 multtest_2.50.0 ## [137] XVector_0.34.0 NADA_1.6-1.1 stringr_1.4.0 digest_0.6.29 ## [141] vegan_2.5-7 Biostrings_2.62.0 rmarkdown_2.13 htmlTable_2.4.0 ## [145] edgeR_3.36.0 gtools_3.9.2 modeltools_0.2-23 lifecycle_1.0.1 ## [149] nlme_3.1-155 jsonlite_1.8.0 Rhdf5lib_1.16.0 carData_3.0-5 ## [153] limma_3.50.1 fansi_1.0.2 pillar_1.7.0 lattice_0.20-45 ## [157] KEGGREST_1.34.0 fastmap_1.1.0 httr_1.4.2 DEoptimR_1.0-10 ## [161] survival_3.3-1 glue_1.6.2 png_0.1-7 iterators_1.0.14 ## [165] glmnet_4.1-3 bit_4.0.4 stringi_1.7.6 sass_0.4.0 ## [169] metagenomeSeq_1.36.0 blob_1.2.2 DESeq2_1.34.0 latticeExtra_0.6-29 ## [173] caTools_1.18.2 memoise_2.0.1 ape_5.6-2 "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
